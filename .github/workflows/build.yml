name: Build

on:
  workflow_call:
    inputs:
      cache:
        description: Whether to enable caching of dependencies based on lockfile.
        default: false
        required: false
        type: boolean
      package-manager:
        description: The package manager (npm or yarn).
        default: npm
        required: false
        type: string
      target-name:
        description: Target name of the build output.
        default: addon
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  CACHE: ${{ inputs.cache }}
  PACKAGE_MANAGER: ${{ inputs.package-manager }}
  TARGET_NAME: ${{ inputs.target-name }}

jobs:
  # linux:
  #   strategy:
  #     matrix:
  #       arch: ['ia32', 'x64']
  #   runs-on: ubuntu-latest
  #   container:
  #     # using oldest image to ensure support for older glibc
  #     # from node:12.0.0 on 2021-08-30
  #     image: node@sha256:c88ef4f7ca8d52ed50366d821e104d029f43e8686120a29541ce0371f333453f
  #   name: linux-${{ matrix.arch }}
  #   env:
  #     ARCH: ${{ matrix.arch }}
  #   steps:
  #     - run: apt-get update && apt-get install -y g++-multilib
  #     - uses: actions/checkout@v3
  #     - uses: DataDog/action-prebuildify/prebuild@main

  linux-arm:
    strategy:
      matrix:
        arch: ['arm64']
    runs-on: ubuntu-18.04
    name: linux-${{ matrix.arch }}
    env:
      ARCH: ${{ matrix.arch }}
    steps:
      - uses: docker/setup-qemu-action@v2
      # - run: apt-get update && apt-get install -y g++-multilib
      - uses: actions/checkout@v3
      - uses: DataDog/action-prebuildify/prebuild@main
      - run: |
          arch -arm64 bash
          uname -a
          wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          nvm install lts
          node -e "console.log(require('os').arch())"
          # ls -lisa ./prebuilds

  # macos-apple:
  #   runs-on: macos-11
  #   name: macos-apple
  #   env:
  #     ARCH: arm64
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: DataDog/action-prebuildify/prebuild@main

  # macos-intel:
  #   strategy:
  #     matrix:
  #       arch: ['ia32', 'x64']
  #   runs-on: macos-10.15
  #   name: macos-intel-${{ matrix.arch }}
  #   env:
  #     ARCH: ${{ matrix.arch }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: DataDog/action-prebuildify/prebuild@main

  # windows:
  #   strategy:
  #     matrix:
  #       arch: ['ia32', 'x64']
  #   runs-on: windows-2019
  #   name: windows-${{ matrix.arch }}
  #   env:
  #     ARCH: ${{ matrix.arch }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: DataDog/action-prebuildify/prebuild@main

  # # Tests

  # alpine-test:
  #   strategy:
  #     matrix:
  #       node: [12, 14, 16, 18]
  #   needs: linux
  #   runs-on: ubuntu-latest
  #   container:
  #     image: node:${{ matrix.node }}-alpine
  #   name: alpine-test-${{ matrix.node }}
  #   steps:
  #     - run: apk update && apk add bash
  #     - uses: actions/checkout@v2
  #     - uses: DataDog/action-prebuildify/test@main

  # linux-test:
  #   needs: linux
  #   runs-on: ubuntu-latest
  #   name: linux-test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: DataDog/action-prebuildify/node/12@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/14@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/16@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/18@main
  #     - uses: DataDog/action-prebuildify/test@main

  # linux-arm-test:
  #   needs: linux
  #   runs-on: ubuntu-latest
  #   name: linux-test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: DataDog/action-prebuildify/node/12@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/14@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/16@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/18@main
  #     - uses: DataDog/action-prebuildify/test@main

  # macos-intel-test:
  #   needs: macos-intel
  #   runs-on: macos-10.15
  #   name: macos-intel-test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: DataDog/action-prebuildify/node/12@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/14@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/16@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/18@main
  #     - uses: DataDog/action-prebuildify/test@main

  # windows-test:
  #   needs: windows
  #   runs-on: windows-2019
  #   name: windows-test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: DataDog/action-prebuildify/node/12@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/14@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/16@main
  #     - uses: DataDog/action-prebuildify/test@main
  #     - uses: DataDog/action-prebuildify/node/18@main
  #     - uses: DataDog/action-prebuildify/test@main
