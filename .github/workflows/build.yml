name: Build

on:
  workflow_call:
    inputs:
      cache:
        description: Whether to enable caching of dependencies based on lockfile.
        default: false
        required: false
        type: boolean
      napi:
        description: Whether to generate a single Node-API binary for all versions of Node.
        default: false
        required: false
        type: boolean
      package-manager:
        description: The package manager (npm or yarn).
        default: npm
        required: false
        type: string
      postbuild:
        description: Command to run after prebuilds have been generated.
        default: ''
        required: false
        type: string
      prebuild:
        description: Command to run before prebuilds are generated.
        default: ''
        required: false
        type: string
      skip:
        description: List of jobs to skip, for example when a platform is not supported.
        default: ''
        required: false
        type: string
      only:
        description: List of jobs to include, for example when only a few platforms are supported.
        default: ''
        required: false
        type: string
      target-name:
        description: Target name of the build output.
        default: addon
        required: false
        type: string
      napi-rs:
        description: Whether or not this build is for a napi-rs project.
        default: false
        required: false
        type: boolean
      neon:
        description: Whether or not this build is for a Neon project.
        default: false
        required: false
        type: boolean
      rust:
        description: Whether or not this build is for a Rust project.
        default: false
        required: false
        type: boolean
      directory-path:
        description: The path to the directory containing your build files, relative to the repo root.
        default: '.'
        required: false
        type: string
      min-node-version:
        description: The minimum Node.js version to build and test
        default: 12
        required: false
        type: number

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  CACHE: ${{ inputs.cache }}
  NAPI: ${{ inputs.napi }}
  PACKAGE_MANAGER: ${{ inputs.package-manager }}
  POSTBUILD: ${{ inputs.postbuild }}
  PREBUILD: ${{ inputs.prebuild }}
  TARGET_NAME: ${{ inputs.target-name }}
  NAPI_RS: ${{ inputs.napi-rs }}
  NEON: ${{ inputs.neon }}
  RUST: ${{ inputs.rust }}
  GYP: ${{ !inputs.napi && !inputs.napi-rs && !inputs.neon && !inputs.rust }}
  DIRECTORY_PATH: ${{ inputs.directory-path }}
  NODE_VERSIONS: '>=${{ inputs.min-node-version }}'

jobs:
  versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.versions.outputs.versions }}
    steps:
      - id: versions
        uses: DataDog/action-prebuildify/compute-matrix@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main
        with:
          min: ${{ inputs.min-node-version }}

  platforms:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.platforms.outputs.platforms }}
    steps:
      - id: platforms
        uses: DataDog/action-prebuildify/platforms@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main
        with:
          skip: ${{ inputs.skip }}
          only: ${{ inputs.only }}

  linuxglibc-arm:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-arm') }}
    runs-on: ubuntu-24.04-arm
    name: linuxglibc-arm
    needs:
      - platforms
    env:
      ARCH: arm
      LIBC: glibc
      DOCKER_BUILDER: rochdev/holy-node-box:12-arm32v7
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linuxglibc-arm64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-arm64') }}
    runs-on: ubuntu-24.04-arm
    name: linuxglibc-arm64
    needs:
      - platforms
    env:
      ARCH: arm64
      LIBC: glibc
      DOCKER_BUILDER: rochdev/holy-node-box:12-arm64v8
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linuxglibc-ia32:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-ia32') }}
    runs-on: ubuntu-latest
    name: linuxglibc-ia32
    needs:
      - platforms
    env:
      ARCH: ia32
      LIBC: glibc
      DOCKER_BUILDER: rochdev/holy-node-box:12-i386
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linuxglibc-x64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-x64') }}
    runs-on: ubuntu-latest
    name: linuxglibc-x64
    needs:
      - platforms
    env:
      ARCH: x64
      LIBC: glibc
      DOCKER_BUILDER: rochdev/holy-node-box:12-amd64
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linuxmusl-x64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxmusl-x64') }}
    runs-on: ubuntu-latest
    name: linuxmusl-x64
    needs:
      - platforms
    env:
      ARCH: x64
      LIBC: musl
      DOCKER_BUILDER: rochdev/holy-node-box:12-amd64-alpine
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linuxmusl-arm64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxmusl-arm64') }}
    runs-on: ubuntu-24.04-arm
    name: linuxmusl-arm64
    needs:
      - platforms
    env:
      ARCH: arm64
      LIBC: musl
      DOCKER_BUILDER: rochdev/holy-node-box:12-arm64v8-alpine
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linuxmusl-x64-alpine-3-17:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxmusl-x64') }}
    runs-on: ubuntu-latest
    name: linuxmusl-x64-alpine-3-17
    needs:
      - platforms
    env:
      ARCH: x64
      LIBC: musl
      DOCKER_BUILDER: rochdev/holy-node-box:12-amd64-alpine-3.17
      PREBUILDS_DIR: linuxmusl-x64
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@szegedi/node-25

  linuxmusl-arm64-alpine-3-17:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'linuxmusl-arm64') }}
    runs-on: ubuntu-24.04-arm
    name: linuxmusl-arm64-alpine-3-17
    needs:
      - platforms
    env:
      ARCH: arm64
      LIBC: musl
      DOCKER_BUILDER: rochdev/holy-node-box:12-arm64v8-alpine-3.17
      PREBUILDS_DIR: linuxmusl-arm64
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@szegedi/node-25

  # TODO: linuxmusl-arm

  darwin-arm64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'darwin-arm64') }}
    runs-on: macos-15
    needs:
      - platforms
    env:
      ARCH: arm64
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  darwin-x64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'darwin-x64') }}
    runs-on: macos-15
    needs:
      - platforms
    env:
      ARCH: x64
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  win32-ia32:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'win32-ia32') }}
    runs-on: windows-2022
    needs:
      - platforms
    env:
      ARCH: ia32
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  win32-x64:
    if: ${{ contains(fromJson(needs.platforms.outputs.platforms), 'win32-x64') }}
    runs-on: windows-2022
    needs:
      - platforms
    env:
      ARCH: x64
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/prebuild@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  # Tests

  alpine-test:
    if: ${{ !failure() && !cancelled() && contains(fromJson(needs.platforms.outputs.platforms), 'linuxmusl-x64') }}
    strategy:
      matrix:
        node: ${{ fromJson(needs.versions.outputs.versions) }}
    needs:
      - versions
      - prebuilds
      - platforms
    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node }}-alpine
    name: alpine-test-${{ matrix.node }}
    steps:
      - run: apk update && apk add bash build-base git python3 curl
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/test@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  centos-test:
    if: ${{ !failure() && !cancelled() && contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-x64') }}
    strategy:
      matrix:
        node: ${{ fromJson(needs.versions.outputs.versions) }}
    needs:
      - versions
      - prebuilds
      - platforms
    runs-on: ubuntu-latest
    container:
      image: centos:${{ matrix.node < 18 && '7' || '8' }}
      volumes:
        - /node20217:/node20217:rw,rshared
        - /node20217:/__e/node20:ro,rshared
    name: centos-test-${{ matrix.node }}
    steps:
      - name: Install libatomic for Node 25 - CentOS 8 vault repos (EOL)
        if: matrix.node == '25'
        run: |
          for f in /etc/yum.repos.d/CentOS-*.repo; do
            sed -i -e 's|^mirrorlist=|#mirrorlist=|g' \
                   -e 's|^#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' "$f"
          done
          yum -y install libatomic
          echo "libatomic installed successfully."
      # https://github.com/actions/runner/issues/2906#issuecomment-2109514798
      - name: Install Node for runner (CentOS-compatible)
        run: |
          curl -LO https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
          tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install Node for tests
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
          . $HOME/.nvm/nvm.sh
          nvm install ${{ matrix.node }}
          npm install -g npm@^7.24.2
          npm install -g yarn@^1.22.22
          dirname $(nvm which default) >> $GITHUB_PATH
        shell: bash
      - uses: DataDog/action-prebuildify/test@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main

  linux-arm64-test:
    if: ${{ !failure() && !cancelled() && contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-arm64') }}
    strategy:
      matrix:
        node: ${{ fromJson(needs.versions.outputs.versions) }}
    needs:
      - versions
      - prebuilds
      - platforms
    runs-on: ubuntu-24.04-arm
    name: linux-arm64-test-${{ matrix.node }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/test@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main
        with:
          node: ${{ matrix.node }}

  linux-x64-test:
    if: ${{ !failure() && !cancelled() && contains(fromJson(needs.platforms.outputs.platforms), 'linuxglibc-x64') }}
    strategy:
      matrix:
        node: ${{ fromJson(needs.versions.outputs.versions) }}
    needs:
      - versions
      - prebuilds
      - platforms
    runs-on: ubuntu-latest
    name: linux-x64-test-${{ matrix.node }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: DataDog/action-prebuildify/test@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main
        with:
          node: ${{ matrix.node }}

  darwin-x64-test:
    if: ${{ !failure() && !cancelled() && contains(fromJson(needs.platforms.outputs.platforms), 'darwin-x64') }}
    strategy:
      matrix:
        node: ${{ fromJson(needs.versions.outputs.versions) }}
    needs:
      - versions
      - prebuilds
      - platforms
    runs-on: macos-13
    name: darwin-x64-test-${{ matrix.node }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
          cache: ${{ (env.CACHE == 'true') && env.PACKAGE_MANAGER || '' }}

      #########################################################################
      # node-gyp < 10 is not compatible with python 3.12
      #
      # For node 16+, we need to install node-gyp@latest that is compatible
      # with python 3.12
      # Instruct npm to use the global version.
      - run: |
          npm install -g node-gyp@latest
          npm explore npm/node_modules/@npmcli/run-script -g -- npm_config_global=false npm install node-gyp@latest
        if: ${{ matrix.node > '14' }}
      # For node 14, we need to install node-gyp@9, because node-gyp@10 is not
      # compatible with node 14. By installing manually setuptools, we ensure
      # that node-gyp@9 is compatible with python 3.12.
      # Older node-gyp versions are not compatible with python 3.12 even with
      # setuptools that's why we install node-gyp@9.
      # nvm@6 refuses to use the local node-gyp version, hence we install it
      # globally and instruct npm to use the global version.
      - run: |
          npm install -g node-gyp@9
          npm config set node_gyp $(npm prefix -g)/lib/node_modules/node-gyp/bin/node-gyp.js
          pip3 install setuptools
        if: ${{ matrix.node <= '14' }}
      #########################################################################

      - uses: DataDog/action-prebuildify/test@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main
        with:
          node: ${{ matrix.node }}

  win32-test:
    if: ${{ !failure() && !cancelled() && contains(fromJson(needs.platforms.outputs.platforms), 'win32-x64') }}
    strategy:
      matrix:
        node: ${{ fromJson(needs.versions.outputs.versions) }}
    needs:
      - versions
      - prebuilds
      - platforms
    runs-on: windows-2022
    name: win32-test-${{ matrix.node }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
          cache: ${{ (env.CACHE == 'true') && env.PACKAGE_MANAGER || '' }}
      - uses: DataDog/action-prebuildify/test@b4f429ed58677e0d608de76a04f4a385a5f25dfb # main
        with:
          node: ${{ matrix.node }}

  # Prebuilds

  prebuilds:
    needs:
      - linuxglibc-arm
      - linuxglibc-arm64
      - linuxglibc-ia32
      - linuxmusl-x64
      - linuxmusl-arm64
      - linuxmusl-x64-alpine-3-17
      - linuxmusl-arm64-alpine-3-17
      - linuxglibc-x64
      - darwin-arm64
      - darwin-x64
      - win32-ia32
      - win32-x64
    # Usage of needs implies that the job will only run if all the jobs it depends on are successful.
    # If any of the jobs it depends on is skipped, this job will be skipped.
    # To workaround this, we use the `if` condition but we also need to add `always()` to make sure the job is run
    # related to https://github.com/actions/runner/issues/2205
    if: ${{ !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    name: prebuilds
    steps:
      - uses: actions/upload-artifact/merge@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: prebuilds
          pattern: prebuilds-*
          delete-merged: true
